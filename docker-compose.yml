version: '3.8'

services:
  mev_relay:
    build: .
    container_name: mev_relay
    restart: unless-stopped
    environment:
      - RUST_LOG=mev_relay=info
      - CONFIG_PATH=/etc/mev_relay/config/development.toml
    volumes:
      - ./config:/etc/mev_relay/config
      - ./logs:/var/log/mev_relay
    ports:
      - "9090:9090"  # Metrics
    depends_on:
      - redis
      - ethereum_node
    networks:
      - mev_network

  redis:
    image: redis:7-alpine
    container_name: mev_relay_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - mev_network

  ethereum_node:
    image: ethereum/client-go:stable
    container_name: mev_relay_ethereum
    restart: unless-stopped
    ports:
      - "8545:8545"
      - "8546:8546"
    volumes:
      - ethereum_data:/root/.ethereum
    command: >
      --http
      --http.addr 0.0.0.0
      --http.port 8545
      --http.corsdomain "*"
      --http.api eth,net,web3,txpool
      --ws
      --ws.addr 0.0.0.0
      --ws.port 8546
      --ws.origins "*"
      --ws.api eth,net,web3,txpool
      --dev
      --allow-insecure-unlock
      --rpc.allow-unprotected-txs
    networks:
      - mev_network

  prometheus:
    image: prom/prometheus:latest
    container_name: mev_relay_prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - mev_network

  grafana:
    image: grafana/grafana:latest
    container_name: mev_relay_grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - mev_network

volumes:
  redis_data:
  ethereum_data:
  prometheus_data:
  grafana_data:

networks:
  mev_network:
    driver: bridge 